name: Test and Deploy to Server

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'edge/**'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout backend
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install backend dependencies and run tests
        run: |
          cd backend
          pip install --upgrade pip
          pip install -r requirements.txt
          python -m pytest tests

  test-edge:
    name: Edge Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout edge
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install edge dependencies and run tests
        run: |
          cd edge
          pip install --upgrade pip
          pip install -r requirements.txt
          python -m pytest tests

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: [test-backend, test-edge]  # ✅ 둘 다 통과해야 실행됨

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/team01/workspace/PIS/park-intel-sentinel
            git pull origin main
            cd infra
            docker compose down
            docker compose up --build -d

